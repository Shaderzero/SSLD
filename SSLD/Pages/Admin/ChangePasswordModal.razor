@using SSLD.Tools
<RadzenTemplateForm TItem="ChangePasswordUser" Data="@Pass" Submit="@OnSubmit" InvalidSubmit="@OnInvalidSubmit">
    <RadzenFieldset Text="Изменение пароля">
        <div class="row mb-5">
            <div class="col-md-4" style="align-self: center;">
                <RadzenLabel Text="Новый пароль" />
            </div>
            <div class="col">
                <RadzenPassword style="display: block" Name="NewPassword" @bind-Value=@Pass.Password Class="w-100" />
                <RadzenRequiredValidator Component="NewPassword" Text="Введите нвоый пароль" Style="position: absolute" />
            </div>
        </div>
        <div class="row mb-4">
            <div class="col-md-4" style="align-self: center;">
                <RadzenLabel Text="Новый пароль" />
            </div>
            <div class="col">
                <RadzenPassword style="display: block" Name="RepeatPassword" @bind-Value=@Pass.RepeatPassword Class="w-100" />
                <RadzenRequiredValidator Component="RepeatPassword" Text="Repeat your password" Style="position: absolute" />
                <RadzenCompareValidator Visible=@(!string.IsNullOrEmpty(Pass.RepeatPassword)) Value=@Pass.Password Component="RepeatPassword" Text="Пароли должны совпадать" Style="position: absolute" />
            </div>
        </div>
        <RadzenButton ButtonType="ButtonType.Submit" Text="Submit"></RadzenButton>
    </RadzenFieldset>
</RadzenTemplateForm>

@code {
    [Parameter] public User User { get; set; }
    [Parameter] public EventCallback<string> ConfirmationChanged { get; set; }
    [Inject] DialogService DialogService { get; set; }
    private ChangePasswordUser Pass { get; set; } = new ChangePasswordUser();

    private void OnSubmit(ChangePasswordUser password)
    {
        DialogService.Close(password.Password != password.RepeatPassword ? null : password.Password);
    }

    static void OnInvalidSubmit(FormInvalidSubmitEventArgs args)
    {

    }
}
